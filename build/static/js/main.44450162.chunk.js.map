{"version":3,"sources":["services/personsDAO.js","App.js","index.js"],"names":["baseUrl","exportedObject","getAll","axios","get","then","response","data","create","newObject","post","remove","id","delete","update","put","Persons","persons","setPersons","filter","filtered","person","name","toLowerCase","includes","map","number","onClick","window","confirm","personsCopy","personsDAO","another","removePerson","Filter","setFilter","onChange","event","target","value","PersonForm","newName","setNewName","newNumber","setNewNumber","onSubmit","preventDefault","find","changedPerson","returnedPerson","catch","error","alert","JSON","stringify","changeNumber","newPerson","concat","type","App","useState","useEffect","initialPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44450162.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = 'api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst exportedObject = { getAll, create, remove, update };\nexport default exportedObject;\n","import React, { useState, useEffect } from 'react';\nimport personsDAO from './services/personsDAO';\n\nconst Persons = ({ persons, setPersons, filter }) => {\n  const removePerson = (person) => {\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      const personsCopy = [...persons];\n      personsDAO.remove(person.id).then(setPersons(personsCopy.filter((another) => another.id !== person.id)));\n    }\n  };\n\n  const filtered = [...persons].filter((person) => person.name.toLowerCase().includes(filter.toLowerCase()));\n  return (\n    <ul>\n      {filtered.map((person) => (\n        <li key={person.id}>\n          {person.name} {person.number} <button onClick={() => removePerson(person)}> remove </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst Filter = ({ filter, setFilter }) => (\n  <div>\n    filter shown with <input onChange={(event) => setFilter(event.target.value)} value={filter} />\n  </div>\n);\n\nconst PersonForm = ({ persons, setPersons, newName, setNewName, newNumber, setNewNumber }) => {\n  const changeNumber = (person) => {\n    const changedPerson = { ...person, number: newNumber };\n    personsDAO.update(person.id, changedPerson).then((returnedPerson) => {\n      setPersons(persons.map((another) => (another.id !== changedPerson.id ? another : returnedPerson))).catch((error) => window.alert(JSON.stringify(error.response.data)));\n    });\n  };\n\n  const addDetails = (event) => {\n    event.preventDefault();\n    if (!persons.map((person) => person.name).includes(newName)) {\n      // if name is already in the phone book\n      const newPerson = { name: newName, number: newNumber };\n      personsDAO\n        .create(newPerson)\n        .then((response) => setPersons(persons.concat(response)))\n        .catch((error) => window.alert(JSON.stringify(error.response.data)));\n\n      setNewName('');\n      setNewNumber('');\n    } else {\n      const person = persons.find((person) => person.name === newName);\n      if (person) {\n        if (person.number !== newNumber && window.confirm(`${person.name} is already added to the phonebook, replace the old number with the new one?`)) {\n          changeNumber(person);\n        }\n      }\n    }\n  };\n\n  return (\n    <form onSubmit={addDetails}>\n      <div>\n        name: <input onChange={(event) => setNewName(event.target.value)} value={newName} />\n      </div>\n      <div>\n        number: <input onChange={(event) => setNewNumber(event.target.value)} value={newNumber} />\n      </div>\n      <div>\n        <button type='submit'>add</button>\n      </div>\n    </form>\n  );\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [filter, setFilter] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n\n  useEffect(() => {\n    personsDAO.getAll().then((initialPersons) => setPersons(initialPersons));\n  }, []);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter filter={filter} setFilter={setFilter} />\n      <h2> Add a new</h2>\n      <PersonForm persons={persons} setPersons={setPersons} newName={newName} setNewName={setNewName} newNumber={newNumber} setNewNumber={setNewNumber} />\n      <h2> Numbers</h2>\n      <Persons persons={persons} setPersons={setPersons} filter={filter} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}